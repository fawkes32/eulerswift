//
//  Euler2.swift
//  
//
//  Created by Laura Skelton on 7/29/14.
//
//

// For larger calculations, Swift playgrounds are too slow. Run in terminal instead.

// To run in the terminal:
//  /Applications/Xcode6-Beta4.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift -i Euler2.swift

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

import Foundation

class fib {
    var arrayCache: [Int]
    
    init () {
        self.arrayCache = [0,1]
    }
    
    // Memoized Array
    func fibArr(n:Int) -> Int {
        if arrayCache.count <= n {
            arrayCache += fibArr(n-1) + fibArr(n-2)
        }
        return arrayCache[n]
    }
}

let myfib = fib()

var fibsum: Int = 0

var i: Int = 0

while myfib.fibArr(i) <= 4000000 {
    let thisfib = myfib.fibArr(i)
    if thisfib % 2 == 0 {
        fibsum += thisfib
    }
    
    println(thisfib)
    
    i += 1
}

println("final sum: \(fibsum)")
